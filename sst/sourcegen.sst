# sourcegen.sst:  Generate broadband source signal for SST passive example.
# $Id: sourcegen.sst 4951 2006-12-29 00:59:57Z rpg $

# Specify the source signal to be generated (grid and filename).
read "source.sst"

# Specify the source's broadband passive emissions.
# The source spectrum is rectangular noise from 150 Hz. to 1350 Hz,
# with a total level of 6.0 dB.
new bbn = BroadbandNoise {
	isComplex = sourceSignal.isComplex
	frequency = sourceSignal.frequency
	times = sourceSignal.times
	spectrumDB = TableFunction {
		order = 1
		table = (
		/* x=frequency  y=power spectral density */
		/* [Hz]         [dB // uPa^2-m/Hz] */
		138             -200
		150             -27.8
		162             -24.8
		1338            -24.8
		1350            -27.8
		1362            -200
		)
	}

	updateInterval = 0.08	# [s] = 240 samples (512-point fft)
}

# Initialize the random number generator.
random.seed = 1234567890

# Add tones at A's from 220 to 1320 Hz.
new hf = HarmonicFamily {
	isComplex = sourceSignal.isComplex
	frequency = sourceSignal.frequency
	times = sourceSignal.times
	fundamental = 220
	harmonics = (
# number ampDB  phaseDeg
	1	 0.0	 0.0
	2	 0.0	 0.0
	3	 0.0	 0.0
	4	 0.0	 0.0
	5	 0.0	 0.0
	6	 0.0	 0.0
	)
}

new sumSource = SumSignal {
	inSignals = ( bbn, hf )
}

# NOTE:  sumSource could be used directly as the source signal.  However,
# it is usually more convenient to copy it to a file and use the file
# as Source.signal, because we often want to plot or otherwise examine
# the source signal, and because we might want to use it more than once.
CopySignal sumSource sourceSignal
